#! /usr/bin/zsh

function check() {
    if [ -z "$1" ]; then
        echo "$2"
        exit 1
    fi
}

check $1 "Please enter crate name"


function sendhelp() {
    echo """
        Crateup
flags:
    
    -q    Quite    Get the name of the specified crate without any other input

"""
}

function getcratelist() {
    local SEARCH_QUERY=$( echo $1 | awk '{ sub(" ", "+") }1' - )
    local QUERY_URL="https://lib.rs/search?q=$SEARCH_QUERY"
    local RAW_CRATES=$( curl -s $QUERY_URL | grep -Ew "\<h4\>" )
    local CRATE_LIST=$( echo $RAW_CRATES | awk 'NR>2 { print last } { last=$0 }' - )
    CRATES=$(echo $CRATE_LIST| awk '{ sub("<h4>", "") sub( "</h4>", "" ) }1' - | head -n 10)
}

function printcrates() {
    local COUNTER=0

    for x in $(echo $1); do
        echo "[$COUNTER] ${x}"
        counter=$(( $COUNTER + 1 ))
    done
}

function getversion() {
    if [ $1 = 0 ]; then
        printf "Crate Number: "
        read CHOICE

        local SELECTED=$( echo $1 | awk "NR==$(( $CHOICE + 1 )){ print }" - )
    elif [ $1 = 1 ]; then
        local SELECTED=$2
    fi
    local CRATE_PAGE=$( curl -s "https://lib.rs/crates/$SELECTED" )
    local RAW_VERSION=$( echo $CRATE_PAGE | grep -Ew "softwareVersion" )
    VERSION=$( echo $RAW_VERSION | sed -r 's/<tr><th content="([0-9.]+)".*/\1/' )
    PRETTY_VERSION="""\
[dependancies]
$SELECTED = "$VERSION"
"""
}

# Process Arguments
case $1 in 
    --help)
        sendhelp
        exit 0
    ;;

    -q)
        getversion 1 $2
        printf $PRETTY_VERSION
esac
